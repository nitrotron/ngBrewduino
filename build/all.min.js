!function(){angular.module("app",["timer","ui.router","googlechart","ngAnimate","toaster","app.logger"])}(),function(){var t="http://localhost:51887/SerialSwitch";angular.module("app").value("basePortUrl",t)}(),function(){function t(){}angular.module("app").controller("appCtrl",t)}(),function(){angular.module("app").config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/classic"),t.state("classic",{url:"/classic",templateUrl:"App/brewduino/brewduino.html"}).state("dashboard",{url:"/dashboard/:id",templateUrl:"App/brewduino/thermoDashBoard.html"}).state("settings",{url:"/settings/:id",templateUrl:"App/settings/settingsForm.html"}).state("cdtAdd",{url:"/cdtAdd/:id",templateUrl:"App/countDownTimerForm/countDownTimerForm.html"})}])}(),function(){function t(t,e,r,n,a){return{c:[{v:t},{v:e},{v:r},{v:n},{v:a}]}}var e={};e.type="AreaChart",e.cssStyle="height:400px; width:100%; float:left;",e.data={cols:[],rows:[]},e.data.cols.push({id:"Time",label:"Time",type:"string",p:{}}),e.data.cols.push({id:"t0",label:"RIMS",type:"number",p:{}}),e.data.cols.push({id:"t1",label:"Mash",type:"number",p:{}}),e.data.cols.push({id:"t2",label:"HLT/Kettle2",type:"number",p:{}}),e.data.cols.push({id:"t3",label:"Kettle",type:"number"}),e.data.rows.push(t("10:30",115,100,106,200)),e.data.rows.push(t("10:31",117,110,106,208)),e.data.rows.push(t("10:32",118,120,106,210)),e.data.rows.push(t("10:33",115,130,106,205)),e.data.rows.push(t("10:34",120,145,105,205)),e.data.rows.push(t("10:35",123,150,104,204)),e.data.rows.push(t("10:36",123,155,103,199)),e.data.rows.push(t("10:37",125,156,106,201)),e.data.rows.push(t("10:38",125,158,105,203)),e.data.rows.push(t("10:39",126,159,106,206)),e.data.rows.push(t("10:40",128,160,105,206)),e.data.rows.push(t("10:41",128,160,106,208)),e.options={title:"Temperatures",titleTextStyle:{color:"#D3D3D4"},isStacked:"false",fill:20,curveType:"function",trendlines:{0:{type:"linear",color:"green",lineWidth:3,opacity:.3,showR2:!0,visibleInLegend:!0},1:{type:"linear",color:"green",lineWidth:"3",opacity:"0.3",showR2:"true",visibleInLegend:"true"}},displayExactValues:!0,vAxis:{title:"Temperature unit",gridlines:{count:6,color:"#D3D3D4"},titleTextStyle:{color:"#D3D3D4"},textStyle:{color:"#D3D3D4"}},hAxis:{title:"Date",gridlines:{color:"#D3D3D4"},titleTextStyle:{color:"#D3D3D4"},textStyle:{color:"#D3D3D4"}},legend:{textStyle:{color:"#D3D3D4"}},backgroundColor:"#353E42",colors:["#67DC2D","#19fcfc","#FC1919","#FC8B19"]},e.formatters={};var r={thermometers:[{id:0,temp:100,highAlarm:200,lowAlarm:15,name:"RIMs",isRIMS:!0},{id:1,temp:110,highAlarm:210,lowAlarm:25,name:"Mash"},{id:2,temp:120,highAlarm:220,lowAlarm:35,name:"HLT"},{id:3,temp:130,highAlarm:230,lowAlarm:45,name:"Kettle"}],TotalTimers:12,rimsEnable:!1,auxOn:!1,pumpOn:!1,WhichThermoAlarm:"kettle",TimersNotAllocated:3,Kp:200,Ki:1,kd:1,SetPoint:100,WindowSize:5e3,TempAlarmActive:!1,TimerAlarmActive:!1};angular.module("app").value("stubData",r).value("chartData",e)}(),function(){function t(t,e,r,n,a){function i(){A.auxBtn=e.auxOn,A.pumpBtn=e.pumpOn,A.rimsBtn=e.rimsEnable,A.otherThermos=p(),e.thermometers.forEach(function(e,r){e.chartEnabled=r===Number(t.params.id)?!0:!1}),A.chartData.view={columns:d()},n.info("Activated "+A.thermo.name+" Dashboard")}function o(){var e={id:t.params.id};t.go("cdtAdd",e)}function s(){A.auxBtn=!A.auxBtn,e.auxOn=A.auxBtn}function u(t){A.chartData.type=t}function l(){A.chartData.view={columns:d()}}function c(){A.showMenu=!1}function m(){A.showMenu=!0}function d(){var t=[0];return e.thermometers.forEach(function(e){e.chartEnabled&&t.push(e.id+1)}),t}function p(){var r=[];return e.thermometers.forEach(function(e,n){n!==Number(t.params.id)&&r.push(e)}),r}function h(){A.pumpBtn=!A.pumpBtn,e.pumpOn=A.pumpBtn}function f(){A.rimsBtn=!A.rimsBtn,e.rimsEnable=A.rimsBtn}function g(){A.alarmBtn=!A.alarmBtn}function w(){var e={id:t.params.id};t.go("settings",e)}function S(e){var r={id:e.id};t.go("dashboard",r)}var A=this;A.addTimer=o,A.alarmBtn=!1,A.auxBtn=e.auxOn,A.auxClick=s,A.chartData=r,A.chartTypeArea=!0,A.chartTypeLine=!1,A.changeChartType=u,A.chBxChartChanged=l,A.closeMenu=c,A.openMenu=m,A.pumpBtn=e.pumpOn,A.pumpClick=h,A.rimsBtn=e.rimsEnable,A.rimsClick=f,A.setAlarm=g,A.settingsClick=w,A.showMenu=!1,A.showStatusLog=a.showStatusLog,A.otherThermos=[],A.switchTemps=S,A.thermometersList=[e.thermometers[t.params.id]],A.thermo=e.thermometers[t.params.id],i()}angular.module("app").controller("brewingThermoItem",t),t.$inject=["$state","stubData","chartData","logger","settingsSrv"]}(),function(){function t(t,e){function r(t,e,r){d=r,m.curPnlAlarm.temperature=t,m.curPnlAlarm.whichAlarm=e,m.curPnlAlarm.whichAlarmDis=e.replace("Alarm","").replace(/\w\S*/g,function(t){return t.charAt(0).toUpperCase()+t.substr(1).toLowerCase()})}function n(t){return angular.isObject(t)&&angular.isDefined(t.isRIMS)&&t.isRIMS===!0}function a(){m.rimsSettingVisible=m.rimsSettingVisible===!0?!1:!0}function i(t){return t.id===d}function o(e){angular.isNumber(m.curPnlAlarm.temperature)&&(angular.isDefined(e[m.curPnlAlarm.whichAlarm])&&(e[m.curPnlAlarm.whichAlarm]=m.curPnlAlarm.temperature,"highAlarm"===m.curPnlAlarm.whichAlarm?t.setHighAlarms(e.id,m.curPnlAlarm.temperature):"lowAlarm"===m.curPnlAlarm.whichAlarm&&t.setLowAlarms(e.id,m.curPnlAlarm.temperature)),d=-1)}function s(){d=-1}function u(){m.rimsSettingVisible=!1,t.setPidSetPoint(m.rimsSetPoint),t.setPidWindowSize(m.rimsWindowSize),t.setPidKp(m.rimsKp),t.setPidKi(m.rimsKi),t.setPidKd(m.rimsKd)}function l(){m.rimsSettingVisible=!1}function c(t){var r={id:t.id};e.go("dashboard",r)}var m=this;m.rimsSetPoint=2e3,m.rimsWindowSize=5e3,m.rimsKp=5,m.rimsKi=.5,m.rimsKd=1,m.openAlarmPanel=r,m.showRimsButton=n,m.showRimsSettings=a,m.rimsSettingVisible=!1,m.showPnlAlarm=i,m.curPnlAlarm={},m.btnUpdateAlarmsClick=o,m.btnCancelAlarmsClick=s,m.btnUpdateRimsClick=u,m.btnUpdateRimsCancelClick=l,m.openThermoDashboard=c;var d=-1}angular.module("app").controller("brewingThermometer",t),t.$inject=["brewduinoCmdsSrv","$state"]}(),function(){function t(t,e,r){function n(){m=new Date}function a(){c.showAddTimerPanel=!0}function i(t,n){c.showAddTimerPanel=!1;var a=new Date;a.setSeconds(a.getSeconds()+60*t);var i={id:d,timer:a,label:n,isActive:!0};d++,r.push(i),m=new Date,e.setTimer(t)}function o(){c.showAddTimerPanel=!1}function s(e){e.isActive=!1,t.$apply()}function u(){c.timers.filter(function(t){return t.isActive})}function l(t){return 0>t-m?1:(t-m)/1e3}var c=this,m=new Date;c.timers=r,c.showAddTimerPanel=!1,c.addTimer=a,c.startNewTimer=i,c.cancelNewTimer=o,c.getTimer=l,c.timerExpired=s,c.removeExpiredTimers=u;var d=0;n()}angular.module("app").controller("countDownTimer",t),t.$inject=["$scope","brewduinoCmdsSrv","countDownTimersVal"]}(),function(){var t=[];angular.module("app").value("countDownTimersVal",t)}(),function(){function t(t,e,r,n){function a(a,i){var o=new Date;o.setSeconds(o.getSeconds()+60*a);var s=r.length+1,u={id:s,timer:o,label:i,isActive:!0};s++,r.push(u),e.setTimer(a),n.pop("success",i,"Added Timer "+a+" Minutes");var l={id:t.params.id};t.go("dashboard",l)}function i(){var e={id:t.params.id};t.go("dashboard",e)}var o=this;o.addTimer=a,o.cancelAddTimer=i}angular.module("app").controller("countDownTimerFormCtrl",t),t.$inject=["$state","brewduinoCmdsSrv","countDownTimersVal","toaster"]}(),function(){"use strict";angular.module("app.logger",[])}(),function(){function t(t,e,r){function n(n,a,i){r.showToast.error===!0&&e.error(n,i),t.error("Error: "+n,a)}function a(n,a,i){r.showToast.info===!0&&e.info(n,i),t.info("Info: "+n,a)}function i(n,a,i){r.showToast.success===!0&&e.success(n,i),t.info("Success: "+n,a)}function o(n,a,i){r.showToast.warning===!0&&e.warning(n,i),t.warn("Warning: "+n,a)}var s={showToasts:!0,error:n,info:a,success:i,warning:o,log:t.log};return s}angular.module("app.logger").factory("logger",t),t.$inject=["$log","toaster","settingsSrv"]}(),function(){function t(t,e){function r(){o.settings={useStubData:e.useStubData,useMockServer:e.useMockServer,url:e.brewduinoUrlAndPort,showStatusLog:e.showStatusLog,showToast:e.showToast}}function n(){var e={id:t.params.id};t.go("dashboard",e)}function a(e){i(e);var r={id:t.params.id};t.go("dashboard",r)}function i(t){e.useStubData=t.useStubData,e.useMockServer=t.useMockServer,e.brewduinoUrlAndPort=t.url,e.showStatusLog=t.showStatusLog,e.showToast=t.showToast}var o=this;o.settings={},o.cancel=n,o.submit=a,r()}angular.module("app").controller("settingsFormCtrl",t),t.$inject=["$state","settingsSrv"]}(),function(){var t={};angular.module("app").value("settingsSrv",t),t.useStubData=!0,t.useMockServer=!0,t.showStatusLog=!1,t.brewduinoUrlAndPort="http://localhost:51887/SerialSwitch",t.showToast={error:!0,info:!0,success:!0,warning:!0}}(),function(){function t(t,e,r){function n(n){var a=t.defer();return n=r,e(function(){a.resolve(r)},2e3),a.promise}function a(){var n=t.defer();e(function(){n.resolve(r)},2e3)}return{getStatus:n,sendCmd:a}}angular.module("app").factory("mockRestSrv",t),t.$inject=["$q","$timeout","stubData"]}(),function(){function t(t){var e=this;e.statusInfo=t}angular.module("app").controller("statusLogCtrl",t),t.$inject=["stubData"]}(),function(){function t(t){function e(e){return t.sendCmd(f.clearTempAlarms,e)}function r(e){return t.getStatus(e)}function n(){return t.sendCmd(f.resetAlarm,"")}function a(e){return t.sendCmd(f.turnOnAux,e?1:0)}function i(e,r){return t.sendCmd(f.setTempAlarmHigh,e+","+r)}function o(e,r){return t.sendCmd(f.setTempAlarmLow,e+","+r)}function s(e){return t.sendCmd(f.setPIDSetPoint,e)}function u(e){return t.sendCmd(f.setPIDWindowSize,e)}function l(e){return t.sendCmd(f.setPIDKp,e)}function c(e){return t.sendCmd(f.setPIDKi,e)}function m(e){return t.sendCmd(f.setPIDKd,e)}function d(e){return t.sendCmd(f.turnOnPump,e?1:0)}function p(e){return t.sendCmd(f.turnOnRims,e?1:0)}function h(e){return t.sendCmd(f.setTimer,e)}var f={returnUnknownCmd:0,returnStatus:1,getTemps:2,getTemp:3,getSensors:4,getSensor:5,getTempAlarms:6,setTempAlarmHigh:7,setTempAlarmLow:8,clearTempAlarms:9,getTimer:10,setTimer:11,resetAlarm:12,getAlarmStatus:13,startLogging:14,stopLogging:15,setPIDSetPoint:16,setPIDWindowSize:17,setPIDKp:18,setPIDKi:19,setPIDKd:20,turnOnRims:21,turnOnPump:22,turnOnAux:23,setInitialClock:24,setDebugModeOn:25};return{cmds:f,clearAlarms:e,getStatus:r,resetAlarm:n,setAuxPower:a,setHighAlarms:i,setLowAlarms:o,setPidSetPoint:s,setPidWindowSize:u,setPidKp:l,setPidKi:c,setPidKd:m,setPumpsPower:d,setRimsPower:p,setTimer:h}}angular.module("app").factory("brewduinoCmdsSrv",t),t.$inject=["brewduionoDataSrv"]}(),function(){function t(t,e,r,n,a,i){function o(){l(),d.auxBtn=d.stubData.auxOn,d.pumpBtn=d.stubData.pumpOn,d.rimsBtn=d.stubData.rimsEnable,d.showStatusLog=i.showStatusLog,a.info("Now viewing Classic theme")}function s(){n.resetAlarm()}function u(t){e.auxOn=d.auxBtn,n.setAuxPower(t)}function l(){n.getStatus(d.stubData).then(function(t){d.stubData=t,a.info("Resolved Data",d.stubData)})}function c(t){e.pumpOn=t,n.setPumpsPower(t)}function m(t){e.rimsEnable=t,n.setRimsPower(t)}var d=this;d.stubData={},d.alarmClick=s,d.auxClick=u,d.pumpClick=c,d.rimsClick=m,o()}angular.module("app").controller("brewduinoCtrl",t),t.$inject=["$interval","stubData","brewduionoDataSrv","brewduinoCmdsSrv","logger","settingsSrv"]}(),function(){function t(t,e,r,n){function a(n){if(e.useMockServer===!0)return r.getStatus(n).then(o,i)["catch"](i);var a=e.brewduinoUrlAndPort+"/GetStatus";return t.get(a).success(function(t){n=t})}function i(t){n.error("XHR Failed for getStatus."+t.data)}function o(t){return n.info("Successful getStatus"),t}function s(n,a){if(e.useMockServer===!0)return r.sendCmd(n,a);var i=e.brewduinoUrlAndPort+"/SendCommand/"+n+"/"+a;return t.post(i)}return{getStatus:a,sendCmd:s}}angular.module("app").factory("brewduionoDataSrv",t),t.$inject=["$http","settingsSrv","mockRestSrv","logger"]}();